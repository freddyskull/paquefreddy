generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String?
  email     String?    @unique
  password  String?
  avatar    String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Purhases  Purhases[]
}

model Categories {
  id        Int        @id @default(autoincrement())
  name      String
  slug_url  String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime
  Products  Products[]
}

model Config {
  id                      Int      @id @default(autoincrement())
  dolar                   Float
  useIva                  Boolean? @default(false)
  autoPrice               Boolean? @default(true)
  profit                  Float    @default(0.3)
  roundPrice              Boolean? @default(false)
  default_categories_id   Int?     @default(1)
  default_categories_slug String?  @default("varios")
  threshold               Int?
  default_currency        String?  @default("BS")
  expiration_default      Int?     @default(30)
  bundle_discount         Float?   @default(0.05)
  moreConfig              String[] @default([])
  createdAt               DateTime @default(now())
  updatedAt               DateTime
}

model Products {
  id           Int         @id @default(autoincrement())
  name         String
  stock        Int
  status       Boolean?    @default(true)
  price        Float
  price_ent    Float
  slugs        String[]    @default([])
  slug_url     String      @unique
  image        String?
  brand        String?
  bundle       Int?
  expiration   DateTime?
  unity        String?
  supplier_id  Int?
  categorie_id Int?
  sell_unity   Boolean?    @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime
  categories   Categories? @relation(fields: [categorie_id], references: [id])
  suppliers    Suppliers?  @relation(fields: [supplier_id], references: [id])
  purhases     Purhases[]
}

model Purhases {
  id                   Int        @id @default(autoincrement())
  user_id              String?    @default("null")
  total_purchase_amout Float[]    @default([])
  dolar_amout          Float?
  date_credit          Int?
  reference            String?
  quantity             Int
  status               Boolean?   @default(true)
  createdAt            DateTime   @default(now())
  updatedAt            DateTime
  User                 User?      @relation(fields: [user_id], references: [id])
  Products             Products[]
}

model Records {
  id                 Int         @id @default(autoincrement())
  productList        Json
  dolar_price        Decimal
  status             Boolean     @default(false)
  totals             Json
  createdAt          DateTime    @default(now())
  updatedAt          DateTime
  user_id            String?     
  black_list_user_id Int?        
  sell_without_stock Boolean?    @default(false)
}

model Suppliers {
  id          Int        @id @default(autoincrement())
  name        String
  credit_days Int        @default(0)
  company     String?
  email       String?
  address     String?
  city        String?
  state       String?
  country     String?
  zip         String?
  phone       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  Products    Products[]
}

model black_list {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  total       Decimal
  record_id   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  address     String?
  city        String?
  email       String?
  phone       String?
  Records     String[] @default([])
}
