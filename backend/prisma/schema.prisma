// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  password  String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  records Records[]
  purhases Purhases[]
}

model Categories {
  id          Int     @id @default(autoincrement())
  name        String
  slug_url    String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Products[]
}

model Suppliers {
  id          Int     @id @default(autoincrement())
  name        String
  credit_days Int @default(0)
  company     String?
  email       String?
  address     String?
  city        String?
  state       String?
  country     String?
  zip         String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Products    Products[]
}

model Products {
  id            Int     @id @default(autoincrement())
  name          String
  stock         Int
  status        Boolean? @default(true)
  price         Float
  price_ent     Float
  slugs         String[] @default([])
  slugs_url     String @unique
  image         String?
  brand         String?
  bundle        Int?
  expiration    DateTime? 
  unity         String?
  supplier_id   Int?
  categorie_id  Int?
  sell_unity    Boolean? @default(false)
  supplier      Suppliers? @relation(fields: [supplier_id], references: [id])
  categorie     Categories? @relation(fields: [categorie_id], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  records       Records[]
  purhases      Purhases[]
}

model Records {
  id          Int     @id @default(autoincrement())
  productList Products[]
  user_id     String?
  product_id  Int?
  quantity    Int
  status      Boolean? @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [user_id], references: [id])
}

model Purhases {
  id                    Int @id @default(autoincrement())
  user_id               String?
  products              Products[]
  total_purchase_amout  Float[] @default([])
  dolar_amout           Float?
  date_credit           Int? // 0 = 30 days, 1 = 60 days, 2 = 90 days
  reference             String?
  quantity              Int
  status                Boolean? @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  user                  User?    @relation(fields: [user_id], references: [id])
}

model Config {
  id                      Int      @id @default(autoincrement())
  dolar                   Float
  useIva                  Boolean? @default(false)
  autoPrice               Boolean? @default(true)
  profit                  Float  @default(0.3) // 30%
  roundPrice              Boolean? @default(false)
  default_categories_id   Int? @default(1)
  default_categories_slug String? @default("varios")
  threshold               Int?
  default_currency       String? @default("BS")
  expiration_default      Int? @default(30)
  bundle_discount         Float? @default(0.05) // 5%
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}